AWSTemplateFormatVersion: '2010-09-09'
Description: 'Finpromptu Contact Form Backend - Lambda + API Gateway + SES'

Parameters:
  NotificationEmail:
    Type: String
    Default: info@finpromptu.com
    Description: Email address to receive contact form notifications
  
  FromEmail:
    Type: String
    Default: noreply@finpromptu.com
    Description: Email address to send from (must be verified in SES)
  
  Environment:
    Type: String
    Default: prod
    AllowedValues: [dev, staging, prod]
    Description: Environment name

Resources:
  # IAM Role for Lambda Function
  ContactFormLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'finpromptu-contact-form-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SESPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: '*'

  # Lambda Function
  ContactFormFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'finpromptu-contact-form-${Environment}'
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt ContactFormLambdaRole.Arn
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          NOTIFICATION_EMAIL: !Ref NotificationEmail
          FROM_EMAIL: !Ref FromEmail
          AWS_REGION: !Ref AWS::Region
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify({ message: 'Placeholder - deploy actual code' })
            };
          };

  # API Gateway Rest API
  ContactFormApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub 'finpromptu-contact-form-api-${Environment}'
      Description: API for Finpromptu contact form submissions
      EndpointConfiguration:
        Types:
          - REGIONAL

  # API Gateway Resource
  ContactFormResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ContactFormApi
      ParentId: !GetAtt ContactFormApi.RootResourceId
      PathPart: contact

  # API Gateway Method (POST)
  ContactFormMethodPost:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactFormApi
      ResourceId: !Ref ContactFormResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ContactFormFunction.Arn}/invocations'
      MethodResponses:
        - StatusCode: 200
          ResponseHeaders:
            Access-Control-Allow-Origin: true
            Access-Control-Allow-Headers: true
            Access-Control-Allow-Methods: true

  # API Gateway Method (OPTIONS for CORS)
  ContactFormMethodOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactFormApi
      ResourceId: !Ref ContactFormResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseHeaders:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              Access-Control-Allow-Methods: "'POST,OPTIONS'"
            ResponseTemplates:
              application/json: ''
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseHeaders:
            Access-Control-Allow-Origin: true
            Access-Control-Allow-Headers: true
            Access-Control-Allow-Methods: true

  # API Gateway Deployment
  ContactFormDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ContactFormMethodPost
      - ContactFormMethodOptions
    Properties:
      RestApiId: !Ref ContactFormApi
      StageName: !Ref Environment

  # Lambda Permission for API Gateway
  ContactFormLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ContactFormFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub '${ContactFormApi}/*/POST/contact'

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub 'https://${ContactFormApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/contact'
    Export:
      Name: !Sub '${AWS::StackName}-ApiEndpoint'

  LambdaFunctionName:
    Description: Lambda function name
    Value: !Ref ContactFormFunction
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunction'

  LambdaFunctionArn:
    Description: Lambda function ARN
    Value: !GetAtt ContactFormFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionArn' 