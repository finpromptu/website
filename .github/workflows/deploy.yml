name: Deploy to AWS S3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to S3
      run: |
        # Create S3 bucket if it doesn't exist
        aws s3 mb s3://finpromptu.com --region us-east-1 2>/dev/null || echo "Bucket already exists"
        
        # Configure public access
        aws s3api put-public-access-block \
            --bucket finpromptu.com \
            --public-access-block-configuration \
            "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"
        
        # Configure static website hosting
        aws s3 website s3://finpromptu.com --index-document index.html --error-document index.html
        
        # Set bucket policy for public read access
        cat > bucket-policy.json << EOF
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "PublicReadGetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": "arn:aws:s3:::finpromptu.com/*"
                }
            ]
        }
        EOF
        
        aws s3api put-bucket-policy --bucket finpromptu.com --policy file://bucket-policy.json
        
        # Upload the built website
        aws s3 sync dist/ s3://finpromptu.com --delete

    - name: Invalidate CloudFront (if distribution exists)
      run: |
        # Get CloudFront distribution ID for finpromptu.com
        DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[0]=='finpromptu.com'].Id" --output text 2>/dev/null || echo "")
        
        if [ ! -z "$DISTRIBUTION_ID" ] && [ "$DISTRIBUTION_ID" != "None" ]; then
          echo "Invalidating CloudFront distribution: $DISTRIBUTION_ID"
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        else
          echo "No CloudFront distribution found for finpromptu.com"
        fi